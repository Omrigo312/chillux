[{"C:\\Users\\omrig\\Documents\\CS Projects\\Full Stack\\John Bryce\\chillux\\client\\src\\index.tsx":"1","C:\\Users\\omrig\\Documents\\CS Projects\\Full Stack\\John Bryce\\chillux\\client\\src\\App.tsx":"2","C:\\Users\\omrig\\Documents\\CS Projects\\Full Stack\\John Bryce\\chillux\\client\\src\\components\\auth\\Register.tsx":"3","C:\\Users\\omrig\\Documents\\CS Projects\\Full Stack\\John Bryce\\chillux\\client\\src\\components\\layout\\Landing.tsx":"4","C:\\Users\\omrig\\Documents\\CS Projects\\Full Stack\\John Bryce\\chillux\\client\\src\\components\\auth\\Login.tsx":"5","C:\\Users\\omrig\\Documents\\CS Projects\\Full Stack\\John Bryce\\chillux\\client\\src\\components\\layout\\Navbar.tsx":"6","C:\\Users\\omrig\\Documents\\CS Projects\\Full Stack\\John Bryce\\chillux\\client\\src\\models\\NavbarLink.ts":"7","C:\\Users\\omrig\\Documents\\CS Projects\\Full Stack\\John Bryce\\chillux\\client\\src\\context\\AuthContext.tsx":"8","C:\\Users\\omrig\\Documents\\CS Projects\\Full Stack\\John Bryce\\chillux\\client\\src\\models\\LoginData.ts":"9","C:\\Users\\omrig\\Documents\\CS Projects\\Full Stack\\John Bryce\\chillux\\client\\src\\components\\vacations\\VacationCard.tsx":"10","C:\\Users\\omrig\\Documents\\CS Projects\\Full Stack\\John Bryce\\chillux\\client\\src\\context\\WindowContext.tsx":"11","C:\\Users\\omrig\\Documents\\CS Projects\\Full Stack\\John Bryce\\chillux\\client\\src\\context\\VacationsContext.tsx":"12","C:\\Users\\omrig\\Documents\\CS Projects\\Full Stack\\John Bryce\\chillux\\client\\src\\components\\auth\\RegisterSuccess.tsx":"13","C:\\Users\\omrig\\Documents\\CS Projects\\Full Stack\\John Bryce\\chillux\\client\\src\\components\\vacations\\AddVacation.tsx":"14","C:\\Users\\omrig\\Documents\\CS Projects\\Full Stack\\John Bryce\\chillux\\client\\src\\components\\vacations\\AllVacations.tsx":"15","C:\\Users\\omrig\\Documents\\CS Projects\\Full Stack\\John Bryce\\chillux\\client\\src\\components\\vacations\\ModifyVacation.tsx":"16","C:\\Users\\omrig\\Documents\\CS Projects\\Full Stack\\John Bryce\\chillux\\client\\src\\utils\\setToken.ts":"17"},{"size":520,"mtime":1610247223350,"results":"18","hashOfConfig":"19"},{"size":1653,"mtime":1610330108130,"results":"20","hashOfConfig":"19"},{"size":4732,"mtime":1610305544037,"results":"21","hashOfConfig":"19"},{"size":2054,"mtime":1610247223344,"results":"22","hashOfConfig":"19"},{"size":4693,"mtime":1610305524475,"results":"23","hashOfConfig":"19"},{"size":5105,"mtime":1610320591966,"results":"24","hashOfConfig":"19"},{"size":122,"mtime":1609757256775,"results":"25","hashOfConfig":"19"},{"size":1426,"mtime":1610331435571,"results":"26","hashOfConfig":"19"},{"size":114,"mtime":1609761586475,"results":"27","hashOfConfig":"19"},{"size":5327,"mtime":1610322254201,"results":"28","hashOfConfig":"19"},{"size":1209,"mtime":1610247223348,"results":"29","hashOfConfig":"19"},{"size":933,"mtime":1610323212607,"results":"30","hashOfConfig":"19"},{"size":551,"mtime":1610247223343,"results":"31","hashOfConfig":"19"},{"size":6119,"mtime":1610318470493,"results":"32","hashOfConfig":"19"},{"size":1846,"mtime":1610323473769,"results":"33","hashOfConfig":"19"},{"size":6764,"mtime":1610320196161,"results":"34","hashOfConfig":"19"},{"size":234,"mtime":1610328892172,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"tmo6pi",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\omrig\\Documents\\CS Projects\\Full Stack\\John Bryce\\chillux\\client\\src\\index.tsx",[],["74","75"],"C:\\Users\\omrig\\Documents\\CS Projects\\Full Stack\\John Bryce\\chillux\\client\\src\\App.tsx",[],"C:\\Users\\omrig\\Documents\\CS Projects\\Full Stack\\John Bryce\\chillux\\client\\src\\components\\auth\\Register.tsx",[],"C:\\Users\\omrig\\Documents\\CS Projects\\Full Stack\\John Bryce\\chillux\\client\\src\\components\\layout\\Landing.tsx",[],"C:\\Users\\omrig\\Documents\\CS Projects\\Full Stack\\John Bryce\\chillux\\client\\src\\components\\auth\\Login.tsx",[],"C:\\Users\\omrig\\Documents\\CS Projects\\Full Stack\\John Bryce\\chillux\\client\\src\\components\\layout\\Navbar.tsx",["76"],"import { AppBar, Box, Button, Toolbar, Divider } from '@material-ui/core';\r\nimport React, { Fragment, useContext, useEffect, useRef, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../../assets/images/logo-circle-transparent.png';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\r\nimport NavbarLink from '../../models/NavbarLink';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { WindowContext } from '../../context/WindowContext';\r\n\r\nexport default function Navbar() {\r\n  const [isShowNavbar, setIsShowNavbar] = useState(true);\r\n  const { authState, logout } = useContext(AuthContext);\r\n  const { setWindowWidth, setNavbarHeight, setTransparentNavbar, transparentNavbar } = useContext(WindowContext);\r\n\r\n  const location = useLocation();\r\n  const elementRef = useRef(null);\r\n\r\n  const [currentTab, setCurrentTab] = useState(location.pathname);\r\n\r\n  const onLogoutClicked = () => {\r\n    logout();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCurrentTab(location.pathname);\r\n    if (location.pathname === '/') {\r\n      setTransparentNavbar(true);\r\n    } else {\r\n      setTransparentNavbar(false);\r\n    }\r\n  }, [location.pathname, setTransparentNavbar]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', (event: any) => setWindowWidth(event.target.innerWidth));\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (isShowNavbar) {\r\n      setNavbarHeight(elementRef.current.clientHeight);\r\n    }\r\n  }, [isShowNavbar, setNavbarHeight]);\r\n\r\n  const userBarLinks = [\r\n    new NavbarLink('/vacations', 'All Offers'),\r\n    new NavbarLink('/account', 'Account', <PersonOutlineIcon />),\r\n  ];\r\n\r\n  const guestBarLinks = [\r\n    new NavbarLink('/vacations', 'All Offers'),\r\n    new NavbarLink('/register', 'Register'),\r\n    new NavbarLink('/login', 'Login'),\r\n  ];\r\n\r\n  const adminBarLinks = [\r\n    new NavbarLink('/vacations', 'All Offers'),\r\n    new NavbarLink('/analytics', 'Analytics'),\r\n    new NavbarLink('/add-vacation', 'Add vacation'),\r\n    new NavbarLink('/account', 'Account', <PersonOutlineIcon />),\r\n  ];\r\n\r\n  const createBar = (links: NavbarLink[]) => (\r\n    <Fragment>\r\n      {links.map((link: NavbarLink, index: number) => {\r\n        const { to, text } = link;\r\n        const active = currentTab === to;\r\n        const color = active ? 'rgb(90, 90, 90)' : 'white';\r\n        return (\r\n          <Fragment key={index}>\r\n            <Box>\r\n              <Link to={to}>\r\n                <Button style={{ color: color }}>\r\n                  {link.icon}\r\n                  {text}\r\n                </Button>\r\n              </Link>\r\n            </Box>\r\n            <Divider light orientation=\"vertical\" flexItem />\r\n          </Fragment>\r\n        );\r\n      })}\r\n    </Fragment>\r\n  );\r\n\r\n  const userBar = (\r\n    <Fragment>\r\n      {createBar(userBarLinks)}\r\n      <Box>\r\n        <Button name=\"logout\" onClick={onLogoutClicked}>\r\n          <ExitToAppIcon />\r\n          Logout\r\n        </Button>\r\n      </Box>\r\n    </Fragment>\r\n  );\r\n\r\n  const guestBar = <Fragment>{createBar(guestBarLinks)}</Fragment>;\r\n\r\n  const adminBar = (\r\n    <Fragment>\r\n      {createBar(adminBarLinks)}\r\n      <Box>\r\n        <Button name=\"logout\" onClick={onLogoutClicked}>\r\n          <ExitToAppIcon />\r\n          Logout\r\n        </Button>\r\n      </Box>\r\n    </Fragment>\r\n  );\r\n\r\n  useEffect(() => {\r\n    const hiddenNavbarLinks = ['/login', '/register', '/register-success'];\r\n    setIsShowNavbar(hiddenNavbarLinks.includes(location.pathname) ? false : true);\r\n  }, [location.pathname]);\r\n\r\n  const boxShadow = location.pathname === '/' ? 'none' : null;\r\n  const background = !transparentNavbar ? 'linear-gradient(to left, rgba(106, 212, 238, 0.85), rgba(2, 52, 75, 0.95))' : '';\r\n\r\n  return (\r\n    <Fragment>\r\n      {isShowNavbar && (\r\n        <AppBar position=\"fixed\" color=\"transparent\" ref={elementRef} style={{ boxShadow: boxShadow }}>\r\n          <Toolbar className=\"navbar\" style={{ padding: 0, background: background }}>\r\n            <Link className=\"logo-container\" to=\"/\">\r\n              <img src={logo} className=\"logo\" alt=\"logo\" />\r\n              <div className=\"logo-text\">\r\n                <h2>Chillux</h2>\r\n                <p>Luxury Vacations</p>\r\n              </div>\r\n            </Link>\r\n            <Box\r\n              width=\"100%\"\r\n              display=\"flex\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"flex-end\"\r\n              alignItems=\"center\"\r\n              className=\"navbar-content\"\r\n              m={1}\r\n              p={1}\r\n            >\r\n              {authState.isAuthenticated ? (authState.userType === 'ADMIN' ? adminBar : userBar) : adminBar}\r\n            </Box>\r\n          </Toolbar>\r\n        </AppBar>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\n/* <Box className=\"search\">\r\n<TextField\r\nvariant=\"outlined\"\r\nplaceholder=\"Find a vacation...\"\r\nonChange={() => {}}\r\nInputProps={{\r\n  startAdornment: (\r\n    <InputAdornment position=\"start\">\r\n      <SearchIcon />\r\n    </InputAdornment>\r\n  ),\r\n}}\r\n/>\r\n</Box> */\r\n","C:\\Users\\omrig\\Documents\\CS Projects\\Full Stack\\John Bryce\\chillux\\client\\src\\models\\NavbarLink.ts",[],"C:\\Users\\omrig\\Documents\\CS Projects\\Full Stack\\John Bryce\\chillux\\client\\src\\context\\AuthContext.tsx",["77"],"C:\\Users\\omrig\\Documents\\CS Projects\\Full Stack\\John Bryce\\chillux\\client\\src\\models\\LoginData.ts",[],"C:\\Users\\omrig\\Documents\\CS Projects\\Full Stack\\John Bryce\\chillux\\client\\src\\components\\vacations\\VacationCard.tsx",["78"],"import { Button, Card, Grid, IconButton, Tooltip } from '@material-ui/core';\r\nimport React, { useContext } from 'react';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport { Link } from 'react-router-dom';\r\nimport { Vacation } from '../../models/Vacation';\r\nimport noImage from '../../assets/images/no-image.png';\r\nimport { WindowContext } from '../../context/WindowContext';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport axios from 'axios';\r\nimport { VacationsContext } from '../../context/VacationsContext';\r\n\r\ninterface VacationCardProps {\r\n  vacation: Vacation;\r\n}\r\n\r\nexport default function VacationCard({ vacation }: VacationCardProps) {\r\n  const { windowWidth } = useContext(WindowContext);\r\n  const { authState } = useContext(AuthContext);\r\n  const { setVacations } = useContext(VacationsContext);\r\n\r\n  const { id, description, destination, imageUrl, price, followers, startDate, endDate } = vacation;\r\n  const startDateObj = new Date(startDate);\r\n  const endDateObj = new Date(endDate);\r\n  const image = imageUrl.length ? imageUrl : noImage;\r\n  const maxLength = windowWidth > 768 ? 125 : 40;\r\n\r\n  const duration = (startDate: Date, endDate: Date): number => {\r\n    const diffTime = Math.abs(endDate.getTime() - startDate.getTime());\r\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n  };\r\n\r\n  const onFollowButtonClicked = async () => {\r\n    if (!authState.isAuthenticated) {\r\n      return alert('You are not logged in');\r\n    }\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const token = authState.token;\r\n    const body = JSON.stringify({ token, vacationId: id });\r\n\r\n    try {\r\n      const res = await axios.post('http://localhost:3001/api/followed-vacations', body, config);\r\n      console.log(`Server Response: ${JSON.stringify(res.data)}`);\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(error.response.data.message);\r\n    }\r\n  };\r\n\r\n  const onDeleteButtonClicked = async () => {\r\n    if (!window.confirm('Are you sure you want to permanently remove this vacation?')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await axios.delete(`http://localhost:3001/api/vacations/${id}`);\r\n      setVacations(res.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(error.response.data.message);\r\n    }\r\n  };\r\n\r\n  const onModifyButtonClicked = () => {\r\n    window.location.replace(`/modify-vacation/${id}`);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"vacation-card\">\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={5}>\r\n          <div\r\n            className=\"vacation-card-image\"\r\n            style={{ background: `url(${image}) no-repeat center center/cover`, height: '100%' }}\r\n          ></div>\r\n        </Grid>\r\n        <Grid item xs={7}>\r\n          <div className=\"vacation-card-text\">\r\n            <div className=\"vacation-card-top\">\r\n              <div className=\"vacation-card-header\">\r\n                <h2>{destination}</h2>\r\n                <p className=\"vacation-card-date\">\r\n                  {duration(startDateObj, endDateObj)} days, {startDateObj.toLocaleDateString()} -{' '}\r\n                  {endDateObj.toLocaleDateString()}\r\n                </p>\r\n              </div>\r\n\r\n              {authState.userType === 'ADMIN' ? (\r\n                <div className=\"vacation-card-star\">\r\n                  <Tooltip title=\"Modify\">\r\n                    <IconButton onClick={onModifyButtonClicked} className=\"star-button\" aria-label=\"modify\">\r\n                      <CreateIcon className=\"modify-icon\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"Delete\">\r\n                    <IconButton onClick={onDeleteButtonClicked} className=\"star-button\" aria-label=\"delete\">\r\n                      <DeleteOutlineIcon className=\"delete-icon\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </div>\r\n              ) : (\r\n                <div className=\"vacation-card-star\">\r\n                  <Tooltip title=\"Follow\">\r\n                    <IconButton onClick={onFollowButtonClicked} className=\"star-button\" aria-label=\"star\">\r\n                      <FavoriteBorderIcon className=\"star-icon\" />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                  <p>{followers}</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"vacation-card-mid\">\r\n              {description.length > maxLength ? (\r\n                <div>{`${description.substring(0, maxLength)}...`}</div>\r\n              ) : (\r\n                <p>{description}</p>\r\n              )}\r\n              <span></span>\r\n            </div>\r\n            <div className=\"vacation-card-bottom\">\r\n              <Link to=\"/vacations/id\" style={{ textDecoration: 'none' }}>\r\n                <Button color=\"primary\" variant=\"contained\" className=\"more-info-button\">\r\n                  More info\r\n                </Button>\r\n              </Link>\r\n              <p>{price}$</p>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n}\r\n","C:\\Users\\omrig\\Documents\\CS Projects\\Full Stack\\John Bryce\\chillux\\client\\src\\context\\WindowContext.tsx",[],"C:\\Users\\omrig\\Documents\\CS Projects\\Full Stack\\John Bryce\\chillux\\client\\src\\context\\VacationsContext.tsx",[],"C:\\Users\\omrig\\Documents\\CS Projects\\Full Stack\\John Bryce\\chillux\\client\\src\\components\\auth\\RegisterSuccess.tsx",[],"C:\\Users\\omrig\\Documents\\CS Projects\\Full Stack\\John Bryce\\chillux\\client\\src\\components\\vacations\\AddVacation.tsx",[],"C:\\Users\\omrig\\Documents\\CS Projects\\Full Stack\\John Bryce\\chillux\\client\\src\\components\\vacations\\AllVacations.tsx",["79"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { VacationsContext } from '../../context/VacationsContext';\r\nimport { WindowContext } from '../../context/WindowContext';\r\nimport { Vacation } from '../../models/Vacation';\r\nimport VacationCard from './VacationCard';\r\n\r\nexport default function AllVacations() {\r\n  const [loadingVacations, setLoadingVacations] = useState(true);\r\n\r\n  const { vacations, setVacations, followedVacations, setFollowedVacations } = useContext(VacationsContext);\r\n  const { navbarHeight } = useContext(WindowContext);\r\n\r\n  const fetchVacations = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:3001/api/vacations');\r\n      setVacations(res.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(error.response.data.message);\r\n    }\r\n  };\r\n\r\n  const fetchFollowedVacations = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:3001/api/followed-vacations');\r\n      setFollowedVacations(res.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(error.response.data.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchVacations();\r\n    fetchFollowedVacations();\r\n    setLoadingVacations(false);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"all-vacations\" style={{ marginTop: navbarHeight + 15 }}>\r\n      {loadingVacations ? (\r\n        <CircularProgress style={{ justifySelf: 'center' }} />\r\n      ) : !vacations.length ? (\r\n        <h1 style={{ justifySelf: 'center' }}>No Vacations Found!</h1>\r\n      ) : (\r\n        vacations.map((vacation: Vacation) => {\r\n          return <VacationCard vacation={vacation} key={vacation.id} />;\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\omrig\\Documents\\CS Projects\\Full Stack\\John Bryce\\chillux\\client\\src\\components\\vacations\\ModifyVacation.tsx",[],"C:\\Users\\omrig\\Documents\\CS Projects\\Full Stack\\John Bryce\\chillux\\client\\src\\utils\\setToken.ts",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":98,"column":9,"nodeType":"86","messageId":"87","endLine":98,"endColumn":17},{"ruleId":"84","severity":1,"message":"88","line":41,"column":9,"nodeType":"86","messageId":"87","endLine":41,"endColumn":17},{"ruleId":"84","severity":1,"message":"89","line":4,"column":8,"nodeType":"86","messageId":"87","endLine":4,"endColumn":20},{"ruleId":"84","severity":1,"message":"90","line":13,"column":36,"nodeType":"86","messageId":"87","endLine":13,"endColumn":53},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"@typescript-eslint/no-unused-vars","'guestBar' is assigned a value but never used.","Identifier","unusedVar","'loadUser' is assigned a value but never used.","'FavoriteIcon' is defined but never used.","'followedVacations' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]